<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>programming on un01s notes</title>
    <link>https://un01s.github.io/categories/programming/</link>
    <description>Recent content in programming on un01s notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Jan 2022 18:00:21 -0700</lastBuildDate><atom:link href="https://un01s.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust on ESP32</title>
      <link>https://un01s.github.io/posts/20220111/</link>
      <pubDate>Tue, 11 Jan 2022 18:00:21 -0700</pubDate>
      
      <guid>https://un01s.github.io/posts/20220111/</guid>
      <description>Start to look at the toolchain for Rust on ESP32 family modules. After some googling, here is the first result.
Clearly the toolchain is working in its early stage. $ cargo build OK. But esptool does not work. This requires further investigation. Instead the flashing tool from esp-idf is used directly to flash one esp32 dev board.
References:
 Rust on ESP32 rust esp32 std demo  </description>
    </item>
    
  </channel>
</rss>
