<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>esp32s3 on un01s notes</title>
    <link>https://un01s.github.io/tags/esp32s3/</link>
    <description>Recent content in esp32s3 on un01s notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Feb 2022 16:18:57 -0700</lastBuildDate><atom:link href="https://un01s.github.io/tags/esp32s3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reading Code of Toit (001)</title>
      <link>https://un01s.github.io/posts/20220225/</link>
      <pubDate>Fri, 25 Feb 2022 16:18:57 -0700</pubDate>
      
      <guid>https://un01s.github.io/posts/20220225/</guid>
      <description>When I started to port the code to ESP32S3 following the example of ESP32C3, I realized I had to read the code closely. Here are the notes along the way.
Where does the code get started on esp32? Based on esp-idf, Toit (pronounced tight) creates a new platform with a new programming language for developers.
For the code to start on the esp32 device, check all the files inside toolchains/esp32/. They contains all the building details for esp32.</description>
    </item>
    
  </channel>
</rss>
